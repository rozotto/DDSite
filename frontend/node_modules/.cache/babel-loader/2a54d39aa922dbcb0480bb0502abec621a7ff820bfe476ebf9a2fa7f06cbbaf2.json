{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmitry\\\\PycharmProjects\\\\GameWise_actually\\\\frontend\\\\src\\\\components\\\\Students.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Students = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const userObj = JSON.parse(storedUser);\n    if (!(userObj !== null && userObj !== void 0 && userObj.is_staff)) {\n      navigate('/home');\n      return;\n    }\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/accounts/api/students/', {\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error(`Ошибка HTTP: ${response.status}`);\n        }\n        const data = await response.json();\n        if (Array.isArray(data.students)) {\n          const studentsWithSelection = data.students.map(student => ({\n            ...student,\n            isSelected: false\n          }));\n          setStudents(studentsWithSelection);\n        } else {\n          throw new Error('Неверный формат данных от сервера');\n        }\n      } catch (err) {\n        setError('Не удалось загрузить список учеников.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStudents();\n  }, [navigate]);\n  const handleStudentSelection = async (studentId, isSelected) => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/accounts/api/assign_student/', {\n        method: 'POST',\n        credentials: 'include',\n        // Для работы с cookies\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          student_id: studentId,\n          is_selected: isSelected\n        })\n      });\n      console.log('Ответ от сервера:', response);\n      console.log(JSON.stringify({\n        student_id: studentId,\n        is_selected: isSelected\n      }));\n      if (!response.ok) {\n        throw new Error('Ошибка при закреплении ученика');\n      }\n\n      // Обновим состояние после успеха\n      const responseData = await response.json();\n      console.log('Ответ данных:', responseData);\n      setStudents(prevStudents => prevStudents.map(student => student.id === studentId ? {\n        ...student,\n        isSelected\n      } : student));\n    } catch (err) {\n      setError('Не удалось закрепить ученика.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"students-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this) : students.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"students-list\",\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"student-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: student.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this), \" \\u2014 \", student.email, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStudentSelection(student.id, !student.isSelected),\n            style: {\n              marginLeft: '10px'\n            },\n            children: student.isSelected ? 'УБРАТЬ УЧЕНИКА' : 'ВЫБРАТЬ УЧЕНИКА'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0423\\u0447\\u0435\\u043D\\u0438\\u043A\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Students, \"QJ2T/Dq1Fre58sOnAep8YOoDcc0=\", false, function () {\n  return [useNavigate];\n});\n_c = Students;\nexport default Students;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Navbar","Footer","jsxDEV","_jsxDEV","Students","_s","students","setStudents","error","setError","loading","setLoading","navigate","storedUser","localStorage","getItem","userObj","JSON","parse","is_staff","fetchStudents","response","fetch","credentials","ok","Error","status","data","json","Array","isArray","studentsWithSelection","map","student","isSelected","err","console","handleStudentSelection","studentId","method","headers","body","stringify","student_id","is_selected","log","responseData","prevStudents","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","username","email","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Dmitry/PycharmProjects/GameWise_actually/frontend/src/components/Students.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nconst Students = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        const userObj = JSON.parse(storedUser);\r\n\r\n        if (!userObj?.is_staff) {\r\n            navigate('/home');\r\n            return;\r\n        }\r\n\r\n        const fetchStudents = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/accounts/api/students/', {\r\n                    credentials: 'include',\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Ошибка HTTP: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                if (Array.isArray(data.students)) {\r\n                    const studentsWithSelection = data.students.map((student) => ({\r\n                        ...student,\r\n                        isSelected: false,\r\n                    }));\r\n                    setStudents(studentsWithSelection);\r\n                } else {\r\n                    throw new Error('Неверный формат данных от сервера');\r\n                }\r\n            } catch (err) {\r\n                setError('Не удалось загрузить список учеников.');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchStudents();\r\n    }, [navigate]);\r\n\r\n    const handleStudentSelection = async (studentId, isSelected) => {\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:8000/accounts/api/assign_student/', {\r\n            method: 'POST',\r\n            credentials: 'include', // Для работы с cookies\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                student_id: studentId,\r\n                is_selected: isSelected,\r\n            }),\r\n        });\r\n\r\n        console.log('Ответ от сервера:', response);\r\n        console.log(JSON.stringify({\r\n    student_id: studentId,\r\n    is_selected: isSelected,\r\n}));\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при закреплении ученика');\r\n        }\r\n\r\n        // Обновим состояние после успеха\r\n        const responseData = await response.json();\r\n        console.log('Ответ данных:', responseData);\r\n\r\n        setStudents((prevStudents) =>\r\n            prevStudents.map((student) =>\r\n                student.id === studentId ? { ...student, isSelected } : student\r\n            )\r\n        );\r\n    } catch (err) {\r\n        setError('Не удалось закрепить ученика.');\r\n        console.error(err);\r\n    }\r\n};\r\n\r\n    return (\r\n        <div className=\"students-container\">\r\n            <Navbar />\r\n            <main>\r\n                <h2>Список учеников</h2>\r\n                {loading ? (\r\n                    <p>Загрузка...</p>\r\n                ) : error ? (\r\n                    <p style={{ color: 'red' }}>{error}</p>\r\n                ) : students.length > 0 ? (\r\n                    <ul className=\"students-list\">\r\n                        {students.map((student) => (\r\n                            <li key={student.id} className=\"student-item\">\r\n                                <strong>{student.username}</strong> — {student.email}\r\n                                <button\r\n                                    onClick={() =>\r\n                                        handleStudentSelection(student.id, !student.isSelected)\r\n                                    }\r\n                                    style={{ marginLeft: '10px' }}\r\n                                >\r\n                                    {student.isSelected ? 'УБРАТЬ УЧЕНИКА' : 'ВЫБРАТЬ УЧЕНИКА'}\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>Ученики не найдены.</p>\r\n                )}\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Students;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}