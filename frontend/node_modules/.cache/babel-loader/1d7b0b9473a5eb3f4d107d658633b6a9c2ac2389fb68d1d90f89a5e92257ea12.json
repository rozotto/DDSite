{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmitry\\\\PycharmProjects\\\\DDSite\\\\frontend\\\\src\\\\components\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Проверяем аутентификацию при монтировании\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (e) {\n        console.error(\"Failed to parse user data\", e);\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async userData => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  // Добавляем функцию проверки аутентификации\n  const isAuthenticated = () => {\n    return !!user;\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      isLoading,\n      login,\n      logout,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","isLoading","setIsLoading","storedUser","localStorage","getItem","JSON","parse","e","console","error","removeItem","login","userData","setItem","stringify","logout","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dmitry/PycharmProjects/DDSite/frontend/src/components/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Проверяем аутентификацию при монтировании\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n            try {\r\n                setUser(JSON.parse(storedUser));\r\n            } catch (e) {\r\n                console.error(\"Failed to parse user data\", e);\r\n                localStorage.removeItem('user');\r\n            }\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    const login = async (userData) => {\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        setUser(userData);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n\r\n    // Добавляем функцию проверки аутентификации\r\n    const isAuthenticated = () => {\r\n        return !!user;\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ \r\n            user, \r\n            isLoading,\r\n            login, \r\n            logout,\r\n            isAuthenticated \r\n        }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACZ,IAAI;QACAH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOK,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,CAAC,CAAC;QAC7CJ,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MACnC;IACJ;IACAT,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAC9BT,YAAY,CAACU,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDb,OAAO,CAACa,QAAQ,CAAC;EACrB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBZ,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BX,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;;EAED;EACA,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC1B,OAAO,CAAC,CAAClB,IAAI;EACjB,CAAC;EAED,oBACIL,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MACzBpB,IAAI;MACJE,SAAS;MACTW,KAAK;MACLI,MAAM;MACNC;IACJ,CAAE;IAAApB,QAAA,EACGA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,EAAA,CA5CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}