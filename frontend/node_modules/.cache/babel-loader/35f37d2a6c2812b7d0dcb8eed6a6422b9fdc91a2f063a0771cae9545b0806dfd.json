{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimae\\\\PycharmProjects\\\\GameWise\\\\frontend\\\\src\\\\components\\\\UserContext.js\",\n  _s = $RefreshSig$();\n//import React, { createContext, useState, useEffect } from 'react';\n//\n//export const UserContext = createContext();\n//\n//export const UserProvider = ({ children }) => {\n//    const [user, setUser] = useState(null);\n//\n//    // Проверить, есть ли пользователь в localStorage при загрузке\n//    useEffect(() => {\n//        const storedUser = localStorage.getItem('user');\n//        if (storedUser) {\n//            setUser(JSON.parse(storedUser));\n//        }\n//    }, []);\n//\n//    // Обновить состояние и localStorage при входе\n//    const loginUser = (userData) => {\n//        setUser(userData);\n//        localStorage.setItem('user', JSON.stringify(userData));\n//    };\n//\n//    // Удалить пользователя при выходе\n//    const logoutUser = () => {\n//        setUser(null);\n//        localStorage.removeItem('user');\n//    };\n//\n//    return (\n//        <UserContext.Provider value={{ user, loginUser, logoutUser }}>\n//            {children}\n//        </UserContext.Provider>\n//    );\n//};\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    // Инициализируем пользователя из localStorage\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  // Функция логина\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // Функция выхода из системы\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"/qp1VMg/epsBKjU12EPFkHgAIuc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","UserContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","userData","setItem","stringify","logout","removeItem","AuthContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dimae/PycharmProjects/GameWise/frontend/src/components/UserContext.js"],"sourcesContent":["//import React, { createContext, useState, useEffect } from 'react';\r\n//\r\n//export const UserContext = createContext();\r\n//\r\n//export const UserProvider = ({ children }) => {\r\n//    const [user, setUser] = useState(null);\r\n//\r\n//    // Проверить, есть ли пользователь в localStorage при загрузке\r\n//    useEffect(() => {\r\n//        const storedUser = localStorage.getItem('user');\r\n//        if (storedUser) {\r\n//            setUser(JSON.parse(storedUser));\r\n//        }\r\n//    }, []);\r\n//\r\n//    // Обновить состояние и localStorage при входе\r\n//    const loginUser = (userData) => {\r\n//        setUser(userData);\r\n//        localStorage.setItem('user', JSON.stringify(userData));\r\n//    };\r\n//\r\n//    // Удалить пользователя при выходе\r\n//    const logoutUser = () => {\r\n//        setUser(null);\r\n//        localStorage.removeItem('user');\r\n//    };\r\n//\r\n//    return (\r\n//        <UserContext.Provider value={{ user, loginUser, logoutUser }}>\r\n//            {children}\r\n//        </UserContext.Provider>\r\n//    );\r\n//};\r\n\r\nimport React, { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(() => {\r\n        // Инициализируем пользователя из localStorage\r\n        const storedUser = localStorage.getItem('user');\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n    });\r\n\r\n    // Функция логина\r\n    const login = (userData) => {\r\n        setUser(userData);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n    };\r\n\r\n    // Функция выхода из системы\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAM;IACnC;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACrD,CAAC,CAAC;;EAEF;EACA,MAAMK,KAAK,GAAIC,QAAQ,IAAK;IACxBP,OAAO,CAACO,QAAQ,CAAC;IACjBL,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBV,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC;EAED,oBACIjB,OAAA,CAACkB,WAAW,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEO,KAAK;MAAEI;IAAO,CAAE;IAAAb,QAAA,EAChDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACpB,EAAA,CAxBWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}