{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimae\\\\PycharmProjects\\\\GameWise\\\\frontend\\\\src\\\\components\\\\CourseQuiz.js\",\n  _s = $RefreshSig$();\n//import React, { useEffect, useState } from 'react';\n//import { useParams } from 'react-router-dom';\n//\n//const CourseQuiz = () => {\n//  const { id } = useParams();\n//  const [questions, setQuestions] = useState([]);\n//  const [answers, setAnswers] = useState({});\n//\n//  useEffect(() => {\n//    fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/questions/`)\n//      .then((res) => res.json())\n//      .then((data) => setQuestions(data.questions));\n//  }, [id]);\n//\n//  const handleAnswerChange = (questionId, optionId) => {\n//    setAnswers({ ...answers, [questionId]: optionId });\n//  };\n//\n//  const handleSubmit = async () => {\n//    const response = await fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/check-answers/`, {\n//      method: 'POST',\n//      headers: { 'Content-Type': 'application/json' },\n//      body: JSON.stringify(answers),\n//    });\n//    const data = await response.json();\n//    alert(`Ваш результат: ${data.correct}/${data.total} (${data.score})`);\n//  };\n//\n//  return (\n//    <div>\n//      <h2>Пройти тест</h2>\n//      {questions.map((question) => (\n//        <div key={question.id}>\n//          <p>{question.text}</p>\n//          {question.options.map((option) => (\n//            <label key={option.id}>\n//              <input\n//                type=\"radio\"\n//                name={`question-${question.id}`}\n//                value={option.id}\n//                onChange={() => handleAnswerChange(question.id, option.id)}\n//              />\n//              {option.text}\n//            </label>\n//          ))}\n//        </div>\n//      ))}\n//      <button onClick={handleSubmit}>Отправить ответы</button>\n//    </div>\n//  );\n//};\n//\n//export default CourseQuiz;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseQuiz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [score, setScore] = useState(null);\n\n  // Загрузка вопросов при загрузке компонента\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/questions/`).then(res => res.json()).then(data => setQuestions(data.questions));\n  }, [id]);\n\n  // Обработка изменений ответов пользователя\n  const handleAnswerChange = (questionId, optionId) => {\n    setAnswers({\n      ...answers,\n      [questionId]: optionId\n    });\n  };\n\n  // Отправка ответов на сервер\n  const handleSubmit = async () => {\n    const response = await fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/check-answers/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value // Для защиты от CSRF\n      },\n      body: JSON.stringify(answers)\n    });\n    const data = await response.json();\n\n    // Показ результатов\n    if (data.error) {\n      alert(`Ошибка: ${data.error}`);\n    } else {\n      setScore(data.score);\n      alert(`Ваш результат: ${data.correct}/${data.total} (${data.score})`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0440\\u043E\\u0439\\u0442\\u0438 \\u0442\\u0435\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${question.id}`,\n          value: option.id,\n          onChange: () => handleAnswerChange(question.id, option.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), option.text]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u0412\\u0430\\u0448 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442: \", score, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseQuiz, \"2suHoZqdw94GlmsE81FVywYcLMs=\", false, function () {\n  return [useParams];\n});\n_c = CourseQuiz;\nexport default CourseQuiz;\nvar _c;\n$RefreshReg$(_c, \"CourseQuiz\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","CourseQuiz","_s","id","questions","setQuestions","answers","setAnswers","score","setScore","fetch","then","res","json","data","handleAnswerChange","questionId","optionId","handleSubmit","response","method","headers","document","querySelector","value","body","JSON","stringify","error","alert","correct","total","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","text","options","option","type","name","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dimae/PycharmProjects/GameWise/frontend/src/components/CourseQuiz.js"],"sourcesContent":["//import React, { useEffect, useState } from 'react';\r\n//import { useParams } from 'react-router-dom';\r\n//\r\n//const CourseQuiz = () => {\r\n//  const { id } = useParams();\r\n//  const [questions, setQuestions] = useState([]);\r\n//  const [answers, setAnswers] = useState({});\r\n//\r\n//  useEffect(() => {\r\n//    fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/questions/`)\r\n//      .then((res) => res.json())\r\n//      .then((data) => setQuestions(data.questions));\r\n//  }, [id]);\r\n//\r\n//  const handleAnswerChange = (questionId, optionId) => {\r\n//    setAnswers({ ...answers, [questionId]: optionId });\r\n//  };\r\n//\r\n//  const handleSubmit = async () => {\r\n//    const response = await fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/check-answers/`, {\r\n//      method: 'POST',\r\n//      headers: { 'Content-Type': 'application/json' },\r\n//      body: JSON.stringify(answers),\r\n//    });\r\n//    const data = await response.json();\r\n//    alert(`Ваш результат: ${data.correct}/${data.total} (${data.score})`);\r\n//  };\r\n//\r\n//  return (\r\n//    <div>\r\n//      <h2>Пройти тест</h2>\r\n//      {questions.map((question) => (\r\n//        <div key={question.id}>\r\n//          <p>{question.text}</p>\r\n//          {question.options.map((option) => (\r\n//            <label key={option.id}>\r\n//              <input\r\n//                type=\"radio\"\r\n//                name={`question-${question.id}`}\r\n//                value={option.id}\r\n//                onChange={() => handleAnswerChange(question.id, option.id)}\r\n//              />\r\n//              {option.text}\r\n//            </label>\r\n//          ))}\r\n//        </div>\r\n//      ))}\r\n//      <button onClick={handleSubmit}>Отправить ответы</button>\r\n//    </div>\r\n//  );\r\n//};\r\n//\r\n//export default CourseQuiz;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CourseQuiz = () => {\r\n  const { id } = useParams();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [score, setScore] = useState(null);\r\n\r\n  // Загрузка вопросов при загрузке компонента\r\n  useEffect(() => {\r\n    fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/questions/`)\r\n      .then((res) => res.json())\r\n      .then((data) => setQuestions(data.questions));\r\n  }, [id]);\r\n\r\n  // Обработка изменений ответов пользователя\r\n  const handleAnswerChange = (questionId, optionId) => {\r\n    setAnswers({ ...answers, [questionId]: optionId });\r\n  };\r\n\r\n  // Отправка ответов на сервер\r\n  const handleSubmit = async () => {\r\n    const response = await fetch(`http://127.0.0.1:8000/accounts/api/courses/${id}/check-answers/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value, // Для защиты от CSRF\r\n      },\r\n      body: JSON.stringify(answers),\r\n    });\r\n    const data = await response.json();\r\n\r\n    // Показ результатов\r\n    if (data.error) {\r\n      alert(`Ошибка: ${data.error}`);\r\n    } else {\r\n      setScore(data.score);\r\n      alert(`Ваш результат: ${data.correct}/${data.total} (${data.score})`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Пройти тест</h2>\r\n      {questions.map((question) => (\r\n        <div key={question.id}>\r\n          <p>{question.text}</p>\r\n          {question.options.map((option) => (\r\n            <label key={option.id}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${question.id}`}\r\n                value={option.id}\r\n                onChange={() => handleAnswerChange(question.id, option.id)}\r\n              />\r\n              {option.text}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Отправить ответы</button>\r\n\r\n      {/* Показать результаты после отправки */}\r\n      {score !== null && (\r\n        <div>\r\n          <h3>Ваш результат: {score}%</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}