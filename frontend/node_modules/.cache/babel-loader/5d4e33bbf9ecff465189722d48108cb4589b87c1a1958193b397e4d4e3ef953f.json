{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimae\\\\PycharmProjects\\\\GameWise\\\\frontend\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\n//import React, { useEffect, useState, useContext } from 'react';\n//import { useParams, useNavigate } from 'react-router-dom';\n//import './Profile.css';\n//import { UserContext } from './UserContext';\n//import Navbar from './Navbar';\n//import Footer from './Footer';\n//\n//const Profile = () => {\n//    const [user, setUser] = useState(null);\n//    const [loading, setLoading] = useState(true);\n//    const [error, setError] = useState('');\n//    const [isEditing, setIsEditing] = useState(false);\n//    const [formData, setFormData] = useState({ username: '', email: '', profile_photo: null });\n//    const navigate = useNavigate();\n//    const { logout } = useContext(UserContext);\n//\n//    const handleLogout = () => {\n//        logout();\n//        window.location.reload();\n//    };\n//\n//    useEffect(() => {\n//        const fetchProfile = () => {\n//            const storedUser = localStorage.getItem('user');\n//\n//            if (!storedUser) {\n//                setError('Пользователь не найден. Авторизуйтесь.');\n//                setLoading(false);\n//                return navigate('/login');\n//            }\n//\n//            const userData = JSON.parse(storedUser);\n//            setUser(userData);\n//            setFormData({ username: userData.username, email: userData.email, profile_photo: null });\n//            setLoading(false);\n//        };\n//\n//        fetchProfile();\n//    }, [navigate]);\n//\n//    const handleInputChange = (e) => {\n//        const { name, value } = e.target;\n//        setFormData({ ...formData, [name]: value });\n//    };\n//\n//    const handleFileChange = (e) => {\n//        setFormData({ ...formData, profile_photo: e.target.files[0] });\n//    };\n//\n//    const handleSave = async () => {\n//        if (!user) return;\n//\n//        const formDataToSend = new FormData();\n//        formDataToSend.append('username', formData.username);\n//        formDataToSend.append('email', formData.email);\n//        if (formData.profile_photo) {\n//            formDataToSend.append('profile_photo', formData.profile_photo);\n//        }\n//\n//        try {\n//            const response = await fetch(`http://127.0.0.1:8000/accounts/api/users/${user.id}/edit/`, {\n//                method: 'POST',\n//                body: formDataToSend,\n//            });\n//\n//            const data = await response.json();\n//\n//            if (data.status === 'success') {\n//                alert('Профиль успешно обновлен!');\n//                localStorage.setItem('user', JSON.stringify({\n//                    ...user,\n//                    username: formData.username,\n//                    email: formData.email,\n//                    profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo,\n//                }));\n//                setUser({\n//                    ...user,\n//                    username: formData.username,\n//                    email: formData.email,\n//                    profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo,\n//                });\n//                setIsEditing(false);\n//            } else {\n//                alert(data.message || 'Ошибка при обновлении профиля');\n//            }\n//        } catch (error) {\n//            alert('Ошибка при отправке данных на сервер');\n//            console.error(error);\n//        }\n//    };\n//\n//    if (loading) {\n//        return <p>Загрузка...</p>;\n//    }\n//\n//    if (error) {\n//        return <p style={{ color: 'red' }}>{error}</p>;\n//    }\n//\n//    return (\n//        <div className=\"profile-container\">\n//            <Navbar />\n//            {user ? (\n//                <div className=\"profile-content\">\n//                    <img\n//                        src={user.profile_photo || 'default-profile.png'}\n//                        alt=\"Profile\"\n//                        className=\"profile-photo\"\n//                    />\n//                    {isEditing ? (\n//                        <div className=\"edit-form\">\n//                            <label>\n//                                Имя пользователя:\n//                                <input\n//                                    type=\"text\"\n//                                    name=\"username\"\n//                                    value={formData.username}\n//                                    onChange={handleInputChange}\n//                                />\n//                            </label>\n//                            <label>\n//                                Email:\n//                                <input\n//                                    type=\"email\"\n//                                    name=\"email\"\n//                                    value={formData.email}\n//                                    onChange={handleInputChange}\n//                                />\n//                            </label>\n//                            <label>\n//                                Фото профиля:\n//                                <input\n//                                    type=\"file\"\n//                                    name=\"profile_photo\"\n//                                    accept=\"image/*\"\n//                                    onChange={handleFileChange}\n//                                />\n//                            </label>\n//                            <button onClick={handleSave}>Сохранить</button>\n//                            <button onClick={() => setIsEditing(false)}>Отмена</button>\n//                        </div>\n//                    ) : (\n//                        <div className=\"profile-details\">\n//                            <h2>{user.username}</h2>\n//                            <p>Email: {user.email}</p>\n//                            <div className=\"profile-buttons\">\n//                                <button className=\"logout-button\" onClick={() => navigate(`/home`)}>На главную</button>\n//                                <button className=\"logout-button\" onClick={() => setIsEditing(true)}>Редактировать</button>\n//                                <button className=\"logout-button\" onClick={handleLogout}>Выйти</button>\n//                            </div>\n//                        </div>\n//                    )}\n//                </div>\n//            ) : (\n//                <p>Данные профиля не найдены.</p>\n//            )}\n//            <Footer />\n//        </div>\n//    );\n//};\n//\n//export default Profile;\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [achievements, setAchievements] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    profile_photo: null\n  });\n  const navigate = useNavigate();\n  const {\n    logout\n  } = useContext(UserContext);\n  const [showAchievements, setShowAchievements] = useState(false);\n  const handleLogout = () => {\n    logout();\n    window.location.reload();\n  };\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        if (!storedUser) {\n          setError('Пользователь не найден. Авторизуйтесь.');\n          setLoading(false);\n          return navigate('/login');\n        }\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n      } catch (err) {\n        console.error('Ошибка при загрузке данных пользователя:', err);\n        setError('Произошла ошибка при загрузке данных пользователя.');\n        setLoading(false);\n      }\n    };\n    fetchProfile();\n  }, [navigate]);\n  const handleShowAchievements = async () => {\n    setLoading(true);\n    try {\n      const storedUser = localStorage.getItem('user');\n      const userData = JSON.parse(storedUser);\n      const response = await fetch(`http://127.0.0.1:8000/accounts/api/users/${userData.id}/achievements-view/`);\n      const data = await response.json();\n      if (data.achievements) {\n        setAchievements(data.achievements);\n      } else {\n        setError('Не удалось загрузить достижения.');\n      }\n    } catch (err) {\n      console.error('Ошибка при загрузке достижений:', err);\n      setError('Произошла ошибка при загрузке достижений.');\n    } finally {\n      setLoading(false);\n    }\n    setShowAchievements(true); // Показываем достижения при нажатии на кнопку\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setFormData({\n      ...formData,\n      profile_photo: e.target.files[0]\n    });\n  };\n  const handleSave = async () => {\n    if (!user) return;\n    const formDataToSend = new FormData();\n    formDataToSend.append('username', formData.username);\n    formDataToSend.append('email', formData.email);\n    if (formData.profile_photo) {\n      formDataToSend.append('profile_photos', formData.profile_photo);\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/users/${user.id}/edit/`, {\n        method: 'POST',\n        body: formDataToSend\n      });\n      const data = await response.json();\n      if (data.status === 'success') {\n        alert('Профиль успешно обновлен!');\n        localStorage.setItem('user', JSON.stringify({\n          ...user,\n          username: formData.username,\n          email: formData.email,\n          profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo\n        }));\n        setUser({\n          ...user,\n          username: formData.username,\n          email: formData.email,\n          profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo\n        });\n        setIsEditing(false);\n      } else {\n        alert(data.message || 'Ошибка при обновлении профиля');\n      }\n    } catch (error) {\n      alert('Ошибка при отправке данных на сервер');\n      console.error(error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"profile_photo\",\n            accept: \"image/*\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.profile_photo || 'default-profile.png',\n          alt: \"Profile\",\n          className: \"profile-photo-large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/home'),\n          children: \"\\u041D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0430\\u0448\\u0438 \\u0434\\u043E\\u0441\\u0442\\u0438\\u0436\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowAchievements,\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u043E\\u0441\\u0442\\u0438\\u0436\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this), showAchievements && achievements.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievements-container\",\n        children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: achievement.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: achievement.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043E: \", new Date(achievement.date_earned).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 37\n          }, this)]\n        }, achievement.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }, this) : showAchievements && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0438\\u0436\\u0435\\u043D\\u0438\\u0439.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"1ROVz+ZwHwKfeWuvF+6hpONOfVQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","user","setUser","loading","setLoading","error","setError","achievements","setAchievements","isEditing","setIsEditing","formData","setFormData","username","email","profile_photo","navigate","logout","showAchievements","setShowAchievements","handleLogout","window","location","reload","fetchProfile","storedUser","localStorage","getItem","userData","JSON","parse","err","console","handleShowAchievements","response","fetch","id","data","json","handleInputChange","e","name","value","target","handleFileChange","files","handleSave","formDataToSend","FormData","append","method","body","status","alert","setItem","stringify","URL","createObjectURL","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","type","onChange","accept","onClick","src","alt","length","map","achievement","title","description","Date","date_earned","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/dimae/PycharmProjects/GameWise/frontend/src/components/Profile.js"],"sourcesContent":["//import React, { useEffect, useState, useContext } from 'react';\r\n//import { useParams, useNavigate } from 'react-router-dom';\r\n//import './Profile.css';\r\n//import { UserContext } from './UserContext';\r\n//import Navbar from './Navbar';\r\n//import Footer from './Footer';\r\n//\r\n//const Profile = () => {\r\n//    const [user, setUser] = useState(null);\r\n//    const [loading, setLoading] = useState(true);\r\n//    const [error, setError] = useState('');\r\n//    const [isEditing, setIsEditing] = useState(false);\r\n//    const [formData, setFormData] = useState({ username: '', email: '', profile_photo: null });\r\n//    const navigate = useNavigate();\r\n//    const { logout } = useContext(UserContext);\r\n//\r\n//    const handleLogout = () => {\r\n//        logout();\r\n//        window.location.reload();\r\n//    };\r\n//\r\n//    useEffect(() => {\r\n//        const fetchProfile = () => {\r\n//            const storedUser = localStorage.getItem('user');\r\n//\r\n//            if (!storedUser) {\r\n//                setError('Пользователь не найден. Авторизуйтесь.');\r\n//                setLoading(false);\r\n//                return navigate('/login');\r\n//            }\r\n//\r\n//            const userData = JSON.parse(storedUser);\r\n//            setUser(userData);\r\n//            setFormData({ username: userData.username, email: userData.email, profile_photo: null });\r\n//            setLoading(false);\r\n//        };\r\n//\r\n//        fetchProfile();\r\n//    }, [navigate]);\r\n//\r\n//    const handleInputChange = (e) => {\r\n//        const { name, value } = e.target;\r\n//        setFormData({ ...formData, [name]: value });\r\n//    };\r\n//\r\n//    const handleFileChange = (e) => {\r\n//        setFormData({ ...formData, profile_photo: e.target.files[0] });\r\n//    };\r\n//\r\n//    const handleSave = async () => {\r\n//        if (!user) return;\r\n//\r\n//        const formDataToSend = new FormData();\r\n//        formDataToSend.append('username', formData.username);\r\n//        formDataToSend.append('email', formData.email);\r\n//        if (formData.profile_photo) {\r\n//            formDataToSend.append('profile_photo', formData.profile_photo);\r\n//        }\r\n//\r\n//        try {\r\n//            const response = await fetch(`http://127.0.0.1:8000/accounts/api/users/${user.id}/edit/`, {\r\n//                method: 'POST',\r\n//                body: formDataToSend,\r\n//            });\r\n//\r\n//            const data = await response.json();\r\n//\r\n//            if (data.status === 'success') {\r\n//                alert('Профиль успешно обновлен!');\r\n//                localStorage.setItem('user', JSON.stringify({\r\n//                    ...user,\r\n//                    username: formData.username,\r\n//                    email: formData.email,\r\n//                    profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo,\r\n//                }));\r\n//                setUser({\r\n//                    ...user,\r\n//                    username: formData.username,\r\n//                    email: formData.email,\r\n//                    profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo,\r\n//                });\r\n//                setIsEditing(false);\r\n//            } else {\r\n//                alert(data.message || 'Ошибка при обновлении профиля');\r\n//            }\r\n//        } catch (error) {\r\n//            alert('Ошибка при отправке данных на сервер');\r\n//            console.error(error);\r\n//        }\r\n//    };\r\n//\r\n//    if (loading) {\r\n//        return <p>Загрузка...</p>;\r\n//    }\r\n//\r\n//    if (error) {\r\n//        return <p style={{ color: 'red' }}>{error}</p>;\r\n//    }\r\n//\r\n//    return (\r\n//        <div className=\"profile-container\">\r\n//            <Navbar />\r\n//            {user ? (\r\n//                <div className=\"profile-content\">\r\n//                    <img\r\n//                        src={user.profile_photo || 'default-profile.png'}\r\n//                        alt=\"Profile\"\r\n//                        className=\"profile-photo\"\r\n//                    />\r\n//                    {isEditing ? (\r\n//                        <div className=\"edit-form\">\r\n//                            <label>\r\n//                                Имя пользователя:\r\n//                                <input\r\n//                                    type=\"text\"\r\n//                                    name=\"username\"\r\n//                                    value={formData.username}\r\n//                                    onChange={handleInputChange}\r\n//                                />\r\n//                            </label>\r\n//                            <label>\r\n//                                Email:\r\n//                                <input\r\n//                                    type=\"email\"\r\n//                                    name=\"email\"\r\n//                                    value={formData.email}\r\n//                                    onChange={handleInputChange}\r\n//                                />\r\n//                            </label>\r\n//                            <label>\r\n//                                Фото профиля:\r\n//                                <input\r\n//                                    type=\"file\"\r\n//                                    name=\"profile_photo\"\r\n//                                    accept=\"image/*\"\r\n//                                    onChange={handleFileChange}\r\n//                                />\r\n//                            </label>\r\n//                            <button onClick={handleSave}>Сохранить</button>\r\n//                            <button onClick={() => setIsEditing(false)}>Отмена</button>\r\n//                        </div>\r\n//                    ) : (\r\n//                        <div className=\"profile-details\">\r\n//                            <h2>{user.username}</h2>\r\n//                            <p>Email: {user.email}</p>\r\n//                            <div className=\"profile-buttons\">\r\n//                                <button className=\"logout-button\" onClick={() => navigate(`/home`)}>На главную</button>\r\n//                                <button className=\"logout-button\" onClick={() => setIsEditing(true)}>Редактировать</button>\r\n//                                <button className=\"logout-button\" onClick={handleLogout}>Выйти</button>\r\n//                            </div>\r\n//                        </div>\r\n//                    )}\r\n//                </div>\r\n//            ) : (\r\n//                <p>Данные профиля не найдены.</p>\r\n//            )}\r\n//            <Footer />\r\n//        </div>\r\n//    );\r\n//};\r\n//\r\n//export default Profile;\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Profile.css';\r\nimport { UserContext } from './UserContext';\r\n\r\nconst Profile = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [achievements, setAchievements] = useState([]);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [formData, setFormData] = useState({ username: '', email: '', profile_photo: null });\r\n    const navigate = useNavigate();\r\n    const { logout } = useContext(UserContext);\r\n    const [showAchievements, setShowAchievements] = useState(false);\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        window.location.reload();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchProfile = async () => {\r\n            try {\r\n                const storedUser = localStorage.getItem('user');\r\n\r\n                if (!storedUser) {\r\n                    setError('Пользователь не найден. Авторизуйтесь.');\r\n                    setLoading(false);\r\n                    return navigate('/login');\r\n                }\r\n\r\n                const userData = JSON.parse(storedUser);\r\n                setUser(userData);\r\n            } catch (err) {\r\n                console.error('Ошибка при загрузке данных пользователя:', err);\r\n                setError('Произошла ошибка при загрузке данных пользователя.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProfile();\r\n    }, [navigate]);\r\n\r\n    const handleShowAchievements = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const storedUser = localStorage.getItem('user');\r\n            const userData = JSON.parse(storedUser);\r\n\r\n            const response = await fetch(`http://127.0.0.1:8000/accounts/api/users/${userData.id}/achievements-view/`);\r\n            const data = await response.json();\r\n\r\n            if (data.achievements) {\r\n                setAchievements(data.achievements);\r\n            } else {\r\n                setError('Не удалось загрузить достижения.');\r\n            }\r\n        } catch (err) {\r\n            console.error('Ошибка при загрузке достижений:', err);\r\n            setError('Произошла ошибка при загрузке достижений.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n        setShowAchievements(true); // Показываем достижения при нажатии на кнопку\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setFormData({ ...formData, profile_photo: e.target.files[0] });\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        if (!user) return;\r\n\r\n        const formDataToSend = new FormData();\r\n        formDataToSend.append('username', formData.username);\r\n        formDataToSend.append('email', formData.email);\r\n        if (formData.profile_photo) {\r\n            formDataToSend.append('profile_photos', formData.profile_photo);\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/users/${user.id}/edit/`, {\r\n                method: 'POST',\r\n                body: formDataToSend,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.status === 'success') {\r\n                alert('Профиль успешно обновлен!');\r\n                localStorage.setItem('user', JSON.stringify({\r\n                    ...user,\r\n                    username: formData.username,\r\n                    email: formData.email,\r\n                    profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo,\r\n                }));\r\n                setUser({\r\n                    ...user,\r\n                    username: formData.username,\r\n                    email: formData.email,\r\n                    profile_photo: formData.profile_photo ? URL.createObjectURL(formData.profile_photo) : user.profile_photo,\r\n                });\r\n                setIsEditing(false);\r\n            } else {\r\n                alert(data.message || 'Ошибка при обновлении профиля');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при отправке данных на сервер');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Загрузка...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p style={{ color: 'red' }}>{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <h1>Страница профиля</h1>\r\n            {user ? (\r\n                <>\r\n                    {isEditing ? (\r\n                        <div>\r\n                            <label>\r\n                                Имя пользователя:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    value={formData.username}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Email:\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Фото профиля:\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"profile_photo\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleFileChange}\r\n                                />\r\n                            </label>\r\n                            <button onClick={handleSave}>Сохранить</button>\r\n                            <button onClick={() => setIsEditing(false)}>Отмена</button>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <img\r\n                                src={user.profile_photo || 'default-profile.png'}\r\n                                alt=\"Profile\"\r\n                                className=\"profile-photo-large\"\r\n                            />\r\n                            <h2>{user.username}</h2>\r\n                            <p>Email: {user.email}</p>\r\n                            <button onClick={() => navigate('/home')}>На главную</button>\r\n                            <button onClick={() => setIsEditing(true)}>Редактировать</button>\r\n                            <button className=\"logout-button\" onClick={handleLogout}>Выйти</button>\r\n                        </>\r\n                    )}\r\n                    <h2>Ваши достижения</h2>\r\n                    {/* Кнопка для отображения достижений */}\r\n                    <button onClick={handleShowAchievements}>Показать достижения</button>\r\n\r\n                    {showAchievements && achievements.length > 0 ? (\r\n                        <div className=\"achievements-container\">\r\n                            {achievements.map((achievement) => (\r\n                                <div key={achievement.id} className=\"achievement-card\">\r\n                                    <h3>{achievement.title}</h3>\r\n                                    <p>{achievement.description}</p>\r\n                                    <p>Получено: {new Date(achievement.date_earned).toLocaleDateString()}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        showAchievements && <p>У вас пока нет достижений.</p>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <p>Данные профиля не найдены.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}